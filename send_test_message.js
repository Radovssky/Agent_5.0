#!/usr/bin/env node

// –°–∫—Ä–∏–ø—Ç –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç—É —á–µ—Ä–µ–∑ Telegram API
import { config } from 'dotenv';
config();

const TELEGRAM_BOT_TOKEN = process.env.TELEGRAM_BOT_TOKEN;

// ID —á–∞—Ç–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è (–º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–≤–æ–π)
const TEST_CHAT_ID = process.env.TEST_CHAT_ID || "123456789";

async function sendMessage(chatId, text) {
    try {
        console.log(`üì§ –û—Ç–ø—Ä–∞–≤–ª—è—é —Å–æ–æ–±—â–µ–Ω–∏–µ: "${text}"`);
        
        const response = await fetch(`https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                chat_id: chatId,
                text: text,
                parse_mode: 'Markdown'
            })
        });

        const result = await response.json();
        
        if (result.ok) {
            console.log('‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!');
            console.log('üìù ID —Å–æ–æ–±—â–µ–Ω–∏—è:', result.result.message_id);
            return result.result;
        } else {
            console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏:', result.description);
            return null;
        }
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞:', error.message);
        return null;
    }
}

async function main() {
    if (!TELEGRAM_BOT_TOKEN) {
        console.error('‚ùå TELEGRAM_BOT_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
        process.exit(1);
    }

    console.log('ü§ñ –¢–µ—Å—Ç–∏—Ä—É—é –æ—Ç–ø—Ä–∞–≤–∫—É —Å–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç—É...\n');

    // –¢–µ—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ—É–Ω–∫—Ü–∏–π –∞–≥–µ–Ω—Ç–∞
    const testMessages = [
        "üëã –ü—Ä–∏–≤–µ—Ç! –ú–æ–∂–µ—à—å –ø–æ–º–æ—á—å –Ω–∞–π—Ç–∏ —Ç—Ä–µ–Ω–¥–æ–≤—ã–µ –≤–∏–¥–µ–æ?",
        "üé¨ –ù–∞–π–¥–∏ –º–Ω–µ –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ –≤–∏–¥–µ–æ –ø—Ä–æ –∫—É–ª–∏–Ω–∞—Ä–∏—é –∏ –≥–æ—Ç–æ–≤–∫—É",
        "üìà –ü–æ–∫–∞–∂–∏ —Ç—Ä–µ–Ω–¥–æ–≤—ã–µ —Ä–æ–ª–∏–∫–∏ –ø—Ä–æ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è –≤ –†–æ—Å—Å–∏–∏",
        "‚ú® –°–≥–µ–Ω–µ—Ä–∏—Ä—É–π –º–Ω–µ —Å—Ü–µ–Ω–∞—Ä–∏–π –≤–∏–¥–µ–æ –ø—Ä–æ –∏—Å–∫—É—Å—Å—Ç–≤–æ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏"
    ];

    for (let i = 0; i < testMessages.length; i++) {
        console.log(`\nüìã –¢–µ—Å—Ç ${i + 1} –∏–∑ ${testMessages.length}:`);
        await sendMessage(TEST_CHAT_ID, testMessages[i]);
        
        if (i < testMessages.length - 1) {
            console.log('‚è≥ –ñ–¥—É 3 —Å–µ–∫—É–Ω–¥—ã...');
            await new Promise(resolve => setTimeout(resolve, 3000));
        }
    }

    console.log('\nüéØ –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:');
    console.log('1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ —Å–µ—Ä–≤–µ—Ä–∞ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π');
    console.log('2. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –∞–≥–µ–Ω—Ç –æ—Ç–≤–µ—á–∞–µ—Ç –≤ —á–∞—Ç–µ Telegram');
    console.log('3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–∞–±–æ—Ç—É –ø–æ–∏—Å–∫–∞ –≤–∏–¥–µ–æ –∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞');
}

main();