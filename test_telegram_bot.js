#!/usr/bin/env node

// –°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è Telegram –±–æ—Ç–∞
import { config } from 'dotenv';
config();

const TELEGRAM_BOT_TOKEN = process.env.TELEGRAM_BOT_TOKEN;
const REPLIT_URL = process.env.REPLIT_DOMAINS ? `https://${process.env.REPLIT_DOMAINS}` : null;

if (!TELEGRAM_BOT_TOKEN || !REPLIT_URL) {
    console.error('‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω—ã –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è');
    process.exit(1);
}

// –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ
async function getBotInfo() {
    try {
        const response = await fetch(`https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/getMe`);
        const result = await response.json();
        
        if (result.ok) {
            console.log('ü§ñ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ:');
            console.log('   –ò–º—è:', result.result.first_name);
            console.log('   Username: @' + result.result.username);
            console.log('   ID:', result.result.id);
            return result.result;
        } else {
            console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±–æ—Ç–µ:', result.description);
            return null;
        }
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞:', error.message);
        return null;
    }
}

// –¢–µ—Å—Ç–∏—Ä—É–µ–º webhook endpoint
async function testWebhook() {
    try {
        console.log('\nüîç –¢–µ—Å—Ç–∏—Ä—É—é webhook endpoint...');
        const testPayload = {
            update_id: 123456789,
            message: {
                message_id: 1,
                from: {
                    id: 123456789,
                    is_bot: false,
                    first_name: "Test",
                    username: "testuser"
                },
                chat: {
                    id: 123456789,
                    first_name: "Test",
                    username: "testuser",
                    type: "private"
                },
                date: Math.floor(Date.now() / 1000),
                text: "–ü—Ä–∏–≤–µ—Ç! –ù–∞–π–¥–∏ –º–Ω–µ —Ç—Ä–µ–Ω–¥–æ–≤—ã–µ –≤–∏–¥–µ–æ –ø—Ä–æ –∫—É–ª–∏–Ω–∞—Ä–∏—é"
            }
        };

        const response = await fetch(`${REPLIT_URL}/webhooks/telegram/action`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify(testPayload)
        });

        console.log('üì° –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞:', response.status);
        console.log('üì° Headers:', [...response.headers.entries()]);
        
        if (response.ok) {
            console.log('‚úÖ Webhook endpoint –¥–æ—Å—Ç—É–ø–µ–Ω –∏ –æ—Ç–≤–µ—á–∞–µ—Ç!');
        } else {
            console.log('‚ö†Ô∏è Webhook endpoint –≤–µ—Ä–Ω—É–ª –æ—à–∏–±–∫—É');
        }
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è webhook:', error.message);
    }
}

// –ü–æ–ª—É—á–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –æ—Ç –±–æ—Ç–∞ (–¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã)
async function getUpdates() {
    try {
        console.log('\nüì® –ü—Ä–æ–≤–µ—Ä—è—é –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç—É...');
        const response = await fetch(`https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/getUpdates`);
        const result = await response.json();
        
        if (result.ok && result.result.length > 0) {
            console.log('üì¨ –ù–∞–π–¥–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–π:', result.result.length);
            result.result.slice(-3).forEach((update, index) => {
                console.log(`   ${index + 1}. –û—Ç ${update.message?.from?.first_name || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}: "${update.message?.text || '–ù–µ —Ç–µ–∫—Å—Ç'}" (${new Date(update.message?.date * 1000).toLocaleString('ru-RU')})`);
            });
        } else {
            console.log('üì≠ –°–æ–æ–±—â–µ–Ω–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ');
        }
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π:', error.message);
    }
}

async function main() {
    console.log('üöÄ –ù–∞—á–∏–Ω–∞—é —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Telegram –±–æ—Ç–∞...\n');
    
    const botInfo = await getBotInfo();
    if (!botInfo) {
        process.exit(1);
    }

    await testWebhook();
    await getUpdates();
    
    console.log('\nüéØ –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:');
    console.log('1. –û—Ç–∫—Ä–æ–π—Ç–µ Telegram –∏ –Ω–∞–π–¥–∏—Ç–µ –±–æ—Ç–∞: @' + botInfo.username);
    console.log('2. –û—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É: /start');
    console.log('3. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–ø—Ä–æ—Å: "–ù–∞–π–¥–∏ –º–Ω–µ —Ç—Ä–µ–Ω–¥–æ–≤—ã–µ –≤–∏–¥–µ–æ –ø—Ä–æ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è"');
    console.log('4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ —Å–µ—Ä–≤–µ—Ä–∞ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏');
}

main();