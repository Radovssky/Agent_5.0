#!/usr/bin/env node

// –°–∫—Ä–∏–ø—Ç –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Telegram webhook
import { config } from 'dotenv';
config();

const TELEGRAM_BOT_TOKEN = process.env.TELEGRAM_BOT_TOKEN;
if (!TELEGRAM_BOT_TOKEN) {
    console.error('‚ùå TELEGRAM_BOT_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è');
    process.exit(1);
}

// –ü–æ–ª—É—á–∞–µ–º URL –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö Replit
const webhookUrl = process.env.REPLIT_DOMAINS ? `https://${process.env.REPLIT_DOMAINS}` : null;

console.log('üîç –ü–æ–ª—É—á–µ–Ω Replit URL:', webhookUrl);

if (!webhookUrl) {
    console.log('‚ö†Ô∏è  URL –ø—Ä–æ–µ–∫—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏.');
    console.log('üìù –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ webhook –≤—Ä—É—á–Ω—É—é:');
    console.log('1. –û—Ç–∫—Ä–æ–π—Ç–µ –±–æ—Ç–∞ @BotFather –≤ Telegram');
    console.log('2. –û—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É: /setwebhook');
    console.log('3. –û—Ç–ø—Ä–∞–≤—å—Ç–µ URL: https://–í–ê–®-–ü–†–û–ï–ö–¢.replit.dev/webhooks/telegram/action');
    console.log('   (–∑–∞–º–µ–Ω–∏—Ç–µ –í–ê–®-–ü–†–û–ï–ö–¢ –Ω–∞ —Ä–µ–∞–ª—å–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞)');
    process.exit(0);
}

const fullWebhookUrl = `${webhookUrl}/webhooks/telegram/action`;

async function setupWebhook() {
    try {
        console.log('üöÄ –ù–∞—Å—Ç—Ä–∞–∏–≤–∞—é webhook –¥–ª—è Telegram...');
        
        const response = await fetch(`https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/setWebhook`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                url: fullWebhookUrl
            })
        });

        const result = await response.json();
        
        if (result.ok) {
            console.log('‚úÖ Webhook —É—Å–ø–µ—à–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω!');
            console.log('üåê URL:', fullWebhookUrl);
            console.log('üì± –¢–µ–ø–µ—Ä—å –±–æ—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!');
        } else {
            console.error('‚ùå –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ webhook:', result.description);
        }
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞:', error.message);
    }
}

setupWebhook();